"use strict";(self.webpackChunk_cdssnc_gcds_components=self.webpackChunk_cdssnc_gcds_components||[]).push([[6375],{"./src/components/gcds-notice/stories/gcds-notice.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Danger:()=>Danger,Default:()=>Default,Info:()=>Info,Playground:()=>Playground,Props:()=>Props,Success:()=>Success,Warning:()=>Warning,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,h2:()=>h2,h3:()=>h3,h4:()=>h4,h5:()=>h5});const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Notice",argTypes:{noticeTitle:{name:"notice-title",control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}},type:{required:!0}},noticeTitleTag:{name:"notice-title-tag",control:{type:"select"},options:["h2","h3","h4","h5"],table:{type:{summary:"string"},defaultValue:{summary:"-"}},type:{required:!0}},type:{control:{type:"select"},options:["success","danger","info","warning"],table:{type:{summary:"string"},defaultValue:{summary:"-"}},type:{required:!0}},...__webpack_require__("./src/utils/storybook/component-properties.js").qK,default:{control:{type:"text"},description:"Customize the content or include additional elements. | Personnalisez le contenu ou ajoutez des éléments supplémentaires.",table:{category:"Slots | Fentes"}}}},Template=args=>`\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-notice type="${args.type}" notice-title-tag="${args.noticeTitleTag}" notice-title="${args.noticeTitle}" ${"en"!=args.lang?`lang="${args.lang}"`:null}>\n  ${""!=args.default.trim()?`<gcds-text>${args.default}</gcds-text>`:null}\n</gcds-notice>\n\n\x3c!-- React code --\x3e\n<GcdsNotice type="${args.type}" noticeTitleTag="${args.noticeTitleTag}" noticeTitle="${args.noticeTitle}" ${"en"!=args.lang?`lang="${args.lang}"`:null}>\n  ${""!=args.default.trim()?`<GcdsText>${args.default}</GcdsText>`:null}\n</GcdsNotice>\n`.replace(/ null/g,""),Default=Template.bind({});Default.args={noticeTitle:"Title",noticeTitleTag:"h2",type:"success",default:"Message.",lang:"en"};const Success=Template.bind({});Success.args={noticeTitle:"Title",noticeTitleTag:"h2",type:"success",default:"Message.",lang:"en"};const Danger=Template.bind({});Danger.args={noticeTitle:"Title",noticeTitleTag:"h2",type:"danger",default:"Message.",lang:"en"};const Info=Template.bind({});Info.args={noticeTitle:"Title",noticeTitleTag:"h2",type:"info",default:"Message.",lang:"en"};const Warning=Template.bind({});Warning.args={noticeTitle:"Title",noticeTitleTag:"h2",type:"warning",default:"Message.",lang:"en"};const h2=Template.bind({});h2.args={noticeTitle:"Title",noticeTitleTag:"h2",type:"success",default:"Message.",lang:"en"};const h3=Template.bind({});h3.args={noticeTitle:"Title",noticeTitleTag:"h3",type:"success",default:"Message.",lang:"en"};const h4=Template.bind({});h4.args={noticeTitle:"Title",noticeTitleTag:"h4",type:"success",default:"Message.",lang:"en"};const h5=Template.bind({});h5.args={noticeTitle:"Title",noticeTitleTag:"h5",type:"success",default:"Message.",lang:"en"};const Props=Template.bind({});Props.args={noticeTitle:"Title",noticeTitleTag:"h2",type:"success",default:"Message.",lang:"en"};const Playground=(args=>`\n<gcds-notice type="${args.type}" notice-title-tag="${args.noticeTitleTag}" notice-title="${args.noticeTitle}" ${"en"!=args.lang?`lang="${args.lang}"`:null}>\n  ${""!=args.default.trim()?`<gcds-text>${args.default}</gcds-text>`:null}\n</gcds-notice>\n`).bind({});Playground.args={noticeTitle:"Title",noticeTitleTag:"h2",type:"success",default:"Message.",lang:"en"},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-notice type="${args.type}" notice-title-tag="${args.noticeTitleTag}" notice-title="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<gcds-text>${args.default}</gcds-text>` : null}\n</gcds-notice>\n\n\x3c!-- React code --\x3e\n<GcdsNotice type="${args.type}" noticeTitleTag="${args.noticeTitleTag}" noticeTitle="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<GcdsText>${args.default}</GcdsText>` : null}\n</GcdsNotice>\n`.replace(/ null/g, \'\')',...Default.parameters?.docs?.source}}},Success.parameters={...Success.parameters,docs:{...Success.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-notice type="${args.type}" notice-title-tag="${args.noticeTitleTag}" notice-title="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<gcds-text>${args.default}</gcds-text>` : null}\n</gcds-notice>\n\n\x3c!-- React code --\x3e\n<GcdsNotice type="${args.type}" noticeTitleTag="${args.noticeTitleTag}" noticeTitle="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<GcdsText>${args.default}</GcdsText>` : null}\n</GcdsNotice>\n`.replace(/ null/g, \'\')',...Success.parameters?.docs?.source}}},Danger.parameters={...Danger.parameters,docs:{...Danger.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-notice type="${args.type}" notice-title-tag="${args.noticeTitleTag}" notice-title="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<gcds-text>${args.default}</gcds-text>` : null}\n</gcds-notice>\n\n\x3c!-- React code --\x3e\n<GcdsNotice type="${args.type}" noticeTitleTag="${args.noticeTitleTag}" noticeTitle="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<GcdsText>${args.default}</GcdsText>` : null}\n</GcdsNotice>\n`.replace(/ null/g, \'\')',...Danger.parameters?.docs?.source}}},Info.parameters={...Info.parameters,docs:{...Info.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-notice type="${args.type}" notice-title-tag="${args.noticeTitleTag}" notice-title="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<gcds-text>${args.default}</gcds-text>` : null}\n</gcds-notice>\n\n\x3c!-- React code --\x3e\n<GcdsNotice type="${args.type}" noticeTitleTag="${args.noticeTitleTag}" noticeTitle="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<GcdsText>${args.default}</GcdsText>` : null}\n</GcdsNotice>\n`.replace(/ null/g, \'\')',...Info.parameters?.docs?.source}}},Warning.parameters={...Warning.parameters,docs:{...Warning.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-notice type="${args.type}" notice-title-tag="${args.noticeTitleTag}" notice-title="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<gcds-text>${args.default}</gcds-text>` : null}\n</gcds-notice>\n\n\x3c!-- React code --\x3e\n<GcdsNotice type="${args.type}" noticeTitleTag="${args.noticeTitleTag}" noticeTitle="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<GcdsText>${args.default}</GcdsText>` : null}\n</GcdsNotice>\n`.replace(/ null/g, \'\')',...Warning.parameters?.docs?.source}}},h2.parameters={...h2.parameters,docs:{...h2.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-notice type="${args.type}" notice-title-tag="${args.noticeTitleTag}" notice-title="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<gcds-text>${args.default}</gcds-text>` : null}\n</gcds-notice>\n\n\x3c!-- React code --\x3e\n<GcdsNotice type="${args.type}" noticeTitleTag="${args.noticeTitleTag}" noticeTitle="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<GcdsText>${args.default}</GcdsText>` : null}\n</GcdsNotice>\n`.replace(/ null/g, \'\')',...h2.parameters?.docs?.source}}},h3.parameters={...h3.parameters,docs:{...h3.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-notice type="${args.type}" notice-title-tag="${args.noticeTitleTag}" notice-title="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<gcds-text>${args.default}</gcds-text>` : null}\n</gcds-notice>\n\n\x3c!-- React code --\x3e\n<GcdsNotice type="${args.type}" noticeTitleTag="${args.noticeTitleTag}" noticeTitle="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<GcdsText>${args.default}</GcdsText>` : null}\n</GcdsNotice>\n`.replace(/ null/g, \'\')',...h3.parameters?.docs?.source}}},h4.parameters={...h4.parameters,docs:{...h4.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-notice type="${args.type}" notice-title-tag="${args.noticeTitleTag}" notice-title="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<gcds-text>${args.default}</gcds-text>` : null}\n</gcds-notice>\n\n\x3c!-- React code --\x3e\n<GcdsNotice type="${args.type}" noticeTitleTag="${args.noticeTitleTag}" noticeTitle="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<GcdsText>${args.default}</GcdsText>` : null}\n</GcdsNotice>\n`.replace(/ null/g, \'\')',...h4.parameters?.docs?.source}}},h5.parameters={...h5.parameters,docs:{...h5.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-notice type="${args.type}" notice-title-tag="${args.noticeTitleTag}" notice-title="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<gcds-text>${args.default}</gcds-text>` : null}\n</gcds-notice>\n\n\x3c!-- React code --\x3e\n<GcdsNotice type="${args.type}" noticeTitleTag="${args.noticeTitleTag}" noticeTitle="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<GcdsText>${args.default}</GcdsText>` : null}\n</GcdsNotice>\n`.replace(/ null/g, \'\')',...h5.parameters?.docs?.source}}},Props.parameters={...Props.parameters,docs:{...Props.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-notice type="${args.type}" notice-title-tag="${args.noticeTitleTag}" notice-title="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<gcds-text>${args.default}</gcds-text>` : null}\n</gcds-notice>\n\n\x3c!-- React code --\x3e\n<GcdsNotice type="${args.type}" noticeTitleTag="${args.noticeTitleTag}" noticeTitle="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<GcdsText>${args.default}</GcdsText>` : null}\n</GcdsNotice>\n`.replace(/ null/g, \'\')',...Props.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'args => `\n<gcds-notice type="${args.type}" notice-title-tag="${args.noticeTitleTag}" notice-title="${args.noticeTitle}" ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n  ${args.default.trim() != \'\' ? `<gcds-text>${args.default}</gcds-text>` : null}\n</gcds-notice>\n`',...Playground.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Success","Danger","Info","Warning","h2","h3","h4","h5","Props","Playground"]},"./src/utils/storybook/component-properties.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{fd:()=>validatorProps,in:()=>eventProp,qK:()=>langProp});const langProp={lang:{control:{type:"select"},options:["en","fr"],table:{type:{summary:"string"},defaultValue:{summary:"en"}}}},validatorProps={validateOn:{name:"validate-on",control:{type:"select"},options:["blur","other"],table:{type:{summary:"string"},defaultValue:{summary:"blur"}}}},eventProp={control:{type:{}},table:{category:"Events | Événements"}}}}]);