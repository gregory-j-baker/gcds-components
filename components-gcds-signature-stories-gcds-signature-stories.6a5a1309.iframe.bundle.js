"use strict";(self.webpackChunk_cdssnc_gcds_components=self.webpackChunk_cdssnc_gcds_components||[]).push([[2453],{"./src/components/gcds-signature/stories/gcds-signature.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,HasLinkTrue:()=>HasLinkTrue,Playground:()=>Playground,Props:()=>Props,SignatureFrench:()=>SignatureFrench,SignatureWhite:()=>SignatureWhite,Wordmark:()=>Wordmark,WordmarkFrench:()=>WordmarkFrench,WordmarkWhite:()=>WordmarkWhite,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Signature",argTypes:{type:{control:"select",options:["signature","wordmark"],table:{type:{summary:"string"},defaultValue:{summary:"signature"}}},hasLink:{name:"has-link",control:{type:"select"},options:[!1,!0],table:{type:{summary:"boolean"},defaultValue:{summary:!1}}},variant:{control:"select",options:["colour","white"],table:{type:{summary:"string"},defaultValue:{summary:"colour"}}},...__webpack_require__("./src/utils/storybook/component-properties.js").qK}},Template=args=>`\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-signature ${"signature"!=args.type?`type="${args.type}"`:null} ${0!=args.hasLink?`has-link="${args.hasLink}"`:null} ${"colour"!=args.variant?`variant="${args.variant}"`:null} ${"en"!=args.lang?`lang="${args.lang}"`:null}>\n</gcds-signature>\n\n\x3c!-- React code --\x3e\n<GcdsSignature ${"signature"!=args.type?`type="${args.type}"`:null} ${0!=args.hasLink?`hasLink="${args.hasLink}"`:null} ${"colour"!=args.variant?`variant="${args.variant}"`:null} ${"en"!=args.lang?`lang="${args.lang}"`:null}>\n</GcdsSignature>\n`.replace(/ null/g,""),Default=Template.bind({});Default.args={type:"signature",hasLink:!1,variant:"colour",lang:"en"};const Wordmark=Template.bind({});Wordmark.args={type:"wordmark",hasLink:!1,variant:"colour",lang:"en"};const SignatureFrench=Template.bind({});SignatureFrench.args={type:"signature",hasLink:!1,variant:"colour",lang:"fr"};const WordmarkFrench=Template.bind({});WordmarkFrench.args={type:"wordmark",hasLink:!1,variant:"colour",lang:"fr"};const HasLinkTrue=Template.bind({});HasLinkTrue.args={type:"signature",hasLink:"true",variant:"colour",lang:"en"};const SignatureWhite=Template.bind({});SignatureWhite.args={type:"signature",hasLink:!1,variant:"white",lang:"en"};const WordmarkWhite=Template.bind({});WordmarkWhite.args={type:"wordmark",hasLink:!1,variant:"white",lang:"en"};const Props=Template.bind({});Props.args={type:"signature",hasLink:!1,variant:"colour",lang:"en"};const Playground=(args=>`\n<gcds-signature\n  type="${args.type}"\n  has-link="${args.hasLink}"\n  variant="${args.variant}"\n  ${"en"!=args.lang?`lang="${args.lang}"`:null}\n>\n</gcds-signature>\n`).bind({});Playground.args={type:"signature",hasLink:!1,variant:"colour",lang:"en"},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-signature ${args.type != \'signature\' ? `type="${args.type}"` : null} ${args.hasLink != false ? `has-link="${args.hasLink}"` : null} ${args.variant != \'colour\' ? `variant="${args.variant}"` : null} ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n</gcds-signature>\n\n\x3c!-- React code --\x3e\n<GcdsSignature ${args.type != \'signature\' ? `type="${args.type}"` : null} ${args.hasLink != false ? `hasLink="${args.hasLink}"` : null} ${args.variant != \'colour\' ? `variant="${args.variant}"` : null} ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n</GcdsSignature>\n`.replace(/ null/g, \'\')',...Default.parameters?.docs?.source}}},Wordmark.parameters={...Wordmark.parameters,docs:{...Wordmark.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-signature ${args.type != \'signature\' ? `type="${args.type}"` : null} ${args.hasLink != false ? `has-link="${args.hasLink}"` : null} ${args.variant != \'colour\' ? `variant="${args.variant}"` : null} ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n</gcds-signature>\n\n\x3c!-- React code --\x3e\n<GcdsSignature ${args.type != \'signature\' ? `type="${args.type}"` : null} ${args.hasLink != false ? `hasLink="${args.hasLink}"` : null} ${args.variant != \'colour\' ? `variant="${args.variant}"` : null} ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n</GcdsSignature>\n`.replace(/ null/g, \'\')',...Wordmark.parameters?.docs?.source}}},SignatureFrench.parameters={...SignatureFrench.parameters,docs:{...SignatureFrench.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-signature ${args.type != \'signature\' ? `type="${args.type}"` : null} ${args.hasLink != false ? `has-link="${args.hasLink}"` : null} ${args.variant != \'colour\' ? `variant="${args.variant}"` : null} ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n</gcds-signature>\n\n\x3c!-- React code --\x3e\n<GcdsSignature ${args.type != \'signature\' ? `type="${args.type}"` : null} ${args.hasLink != false ? `hasLink="${args.hasLink}"` : null} ${args.variant != \'colour\' ? `variant="${args.variant}"` : null} ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n</GcdsSignature>\n`.replace(/ null/g, \'\')',...SignatureFrench.parameters?.docs?.source}}},WordmarkFrench.parameters={...WordmarkFrench.parameters,docs:{...WordmarkFrench.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-signature ${args.type != \'signature\' ? `type="${args.type}"` : null} ${args.hasLink != false ? `has-link="${args.hasLink}"` : null} ${args.variant != \'colour\' ? `variant="${args.variant}"` : null} ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n</gcds-signature>\n\n\x3c!-- React code --\x3e\n<GcdsSignature ${args.type != \'signature\' ? `type="${args.type}"` : null} ${args.hasLink != false ? `hasLink="${args.hasLink}"` : null} ${args.variant != \'colour\' ? `variant="${args.variant}"` : null} ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n</GcdsSignature>\n`.replace(/ null/g, \'\')',...WordmarkFrench.parameters?.docs?.source}}},HasLinkTrue.parameters={...HasLinkTrue.parameters,docs:{...HasLinkTrue.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-signature ${args.type != \'signature\' ? `type="${args.type}"` : null} ${args.hasLink != false ? `has-link="${args.hasLink}"` : null} ${args.variant != \'colour\' ? `variant="${args.variant}"` : null} ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n</gcds-signature>\n\n\x3c!-- React code --\x3e\n<GcdsSignature ${args.type != \'signature\' ? `type="${args.type}"` : null} ${args.hasLink != false ? `hasLink="${args.hasLink}"` : null} ${args.variant != \'colour\' ? `variant="${args.variant}"` : null} ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n</GcdsSignature>\n`.replace(/ null/g, \'\')',...HasLinkTrue.parameters?.docs?.source}}},SignatureWhite.parameters={...SignatureWhite.parameters,docs:{...SignatureWhite.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-signature ${args.type != \'signature\' ? `type="${args.type}"` : null} ${args.hasLink != false ? `has-link="${args.hasLink}"` : null} ${args.variant != \'colour\' ? `variant="${args.variant}"` : null} ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n</gcds-signature>\n\n\x3c!-- React code --\x3e\n<GcdsSignature ${args.type != \'signature\' ? `type="${args.type}"` : null} ${args.hasLink != false ? `hasLink="${args.hasLink}"` : null} ${args.variant != \'colour\' ? `variant="${args.variant}"` : null} ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n</GcdsSignature>\n`.replace(/ null/g, \'\')',...SignatureWhite.parameters?.docs?.source}}},WordmarkWhite.parameters={...WordmarkWhite.parameters,docs:{...WordmarkWhite.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-signature ${args.type != \'signature\' ? `type="${args.type}"` : null} ${args.hasLink != false ? `has-link="${args.hasLink}"` : null} ${args.variant != \'colour\' ? `variant="${args.variant}"` : null} ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n</gcds-signature>\n\n\x3c!-- React code --\x3e\n<GcdsSignature ${args.type != \'signature\' ? `type="${args.type}"` : null} ${args.hasLink != false ? `hasLink="${args.hasLink}"` : null} ${args.variant != \'colour\' ? `variant="${args.variant}"` : null} ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n</GcdsSignature>\n`.replace(/ null/g, \'\')',...WordmarkWhite.parameters?.docs?.source}}},Props.parameters={...Props.parameters,docs:{...Props.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (HTML, Angular, Vue) --\x3e\n<gcds-signature ${args.type != \'signature\' ? `type="${args.type}"` : null} ${args.hasLink != false ? `has-link="${args.hasLink}"` : null} ${args.variant != \'colour\' ? `variant="${args.variant}"` : null} ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n</gcds-signature>\n\n\x3c!-- React code --\x3e\n<GcdsSignature ${args.type != \'signature\' ? `type="${args.type}"` : null} ${args.hasLink != false ? `hasLink="${args.hasLink}"` : null} ${args.variant != \'colour\' ? `variant="${args.variant}"` : null} ${args.lang != \'en\' ? `lang="${args.lang}"` : null}>\n</GcdsSignature>\n`.replace(/ null/g, \'\')',...Props.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'args => `\n<gcds-signature\n  type="${args.type}"\n  has-link="${args.hasLink}"\n  variant="${args.variant}"\n  ${args.lang != \'en\' ? `lang="${args.lang}"` : null}\n>\n</gcds-signature>\n`',...Playground.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Wordmark","SignatureFrench","WordmarkFrench","HasLinkTrue","SignatureWhite","WordmarkWhite","Props","Playground"]},"./src/utils/storybook/component-properties.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{fd:()=>validatorProps,in:()=>eventProp,qK:()=>langProp});const langProp={lang:{control:{type:"select"},options:["en","fr"],table:{type:{summary:"string"},defaultValue:{summary:"en"}}}},validatorProps={validateOn:{name:"validate-on",control:{type:"select"},options:["blur","other"],table:{type:{summary:"string"},defaultValue:{summary:"blur"}}}},eventProp={control:{type:{}},table:{category:"Events | Événements"}}}}]);